{"version":3,"file":"big-axios.js","mappings":"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","sources":["webpack://BigAxios/webpack/universalModuleDefinition","webpack://BigAxios/external umd \"axios\"","webpack://BigAxios/webpack/bootstrap","webpack://BigAxios/webpack/runtime/compat get default export","webpack://BigAxios/webpack/runtime/define property getters","webpack://BigAxios/webpack/runtime/hasOwnProperty shorthand","webpack://BigAxios/webpack/runtime/make namespace object","webpack://BigAxios/./src/Exceptions.ts","webpack://BigAxios/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"axios\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"big-axios\", [\"axios\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"big-axios\"] = factory(require(\"axios\"));\n\telse\n\t\troot[\"BigAxios\"] = factory(root[\"axios\"]);\n})(self, (__WEBPACK_EXTERNAL_MODULE__300__) => {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__300__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import type { ExceptionMsg } from '../types/index';\n\n// 系统错误\nconst errorMsgs: Record<string, ExceptionMsg> = {\n   400: {\n      msg: '错误的请求'\n   },\n   401: {\n      msg: '验证失败'\n   },\n   403: {\n      msg: '服务器拒绝访问，请检查操作是否合法'\n   },\n   404: {\n      msg: '请求地址不存在'\n   },\n   405: {\n      msg: '您没有权限进行此操作'\n   },\n   406: {\n      msg: '请您保证内容完整后提交'\n   },\n   409: {\n      msg: '内容已存在'\n   },\n   429: {\n      msg: '请求过于频繁，请稍后再试'\n   },\n   413: {\n      msg: '请求实体过大'\n   },\n   414: {\n      msg: '请求URI过长'\n   },\n   415: {\n      msg: '不支持的媒体类型'\n   },\n   500: {\n      msg: '服务器内部错误，请联系管理员'\n   },\n   501: {\n      msg: ''\n   },\n   502: {\n      msg: '网关错误，请检查您的网络'\n   },\n   503: {\n      msg: '服务器维护中,请稍后重试'\n   },\n   504: {\n      msg: '网关连接超时，请检查您的网络'\n   }\n};\n\nclass Exception {\n   private serviceApiErrorMsgs: Record<string, ExceptionMsg>;\n   constructor(msgs: Record<string, ExceptionMsg>) {\n      this.serviceApiErrorMsgs = {\n         '-9999': {\n            msg: '发起网络请求失败'\n         },\n         ...msgs\n      };\n   }\n\n   getExceptionMsg = function (errorCode: number | undefined, errorMsg?: string) {\n      const error = this.serviceApiErrorMsgs[errorCode + ''] ?? errorMsgs[errorCode + ''];\n      if (error) {\n         if (error.callback) {\n            error.callback();\n         }\n\n         return errorMsg || error.msg;\n      } else {\n         if (errorMsg) {\n            return errorMsg;\n         } else {\n            return '未知错误';\n         }\n      }\n   };\n}\n\nexport default Exception;\n","import axios from 'axios';\nimport Exceptions from './Exceptions';\n\nimport type {\n   AxiosRequestConfig,\n   AxiosInstance,\n   CreateAxiosDefaults,\n   AxiosInterceptorOptions,\n   InternalAxiosRequestConfig,\n   AxiosResponse\n} from 'axios';\nimport type { Method, ResponsePromise, Response, ExceptionMsg, BigAxios as BigAxiosInstance } from '../types/index';\n\nconst queue401 = [];\nlet controller = new AbortController();\nlet postRequestList: { url: string; data: string }[] = [];\n\nclass BigAxios {\n   private http: AxiosInstance = axios.create();\n   private url: string;\n   private type: string | undefined;\n   private data: Record<string, unknown>;\n   private options: AxiosRequestConfig;\n   private interceptorIds: number[] = [];\n   private exception: Exceptions = null;\n\n   get axiosHttp(): AxiosInstance {\n      return this.http;\n   }\n\n   get builtInInterceptorIds(): number[] {\n      return this.interceptorIds;\n   }\n\n   /**\n    * 创建 big-axios 实例\n    * @param serviceApiErrorMsgs 服务端返回的错误码与错误信息\n    * @param config 配置，可参考 axios 的配置项\n    * @param {loginPath,successfulCodes} loginPath：登录页面路径，默认值：/login，用于未登录时跳转到登录页面；successfulCodes：业务 api 返回的成功状态码，默认值：[200, 0, '200']\n    * @returns {BigAxiosInstance} big-axios 实例\n    */\n   create(\n      serviceApiErrorMsgs: Record<string, ExceptionMsg>,\n      config?: CreateAxiosDefaults,\n      { loginPath = '/login', successfulCodes = [200, 0, '200'] }: { loginPath?: string; successfulCodes?: (string | number)[] } = {}\n   ): BigAxiosInstance {\n      this.exception = new Exceptions(serviceApiErrorMsgs);\n\n      this.url = '';\n      this.data = {};\n\n      this.http = axios.create(config);\n      // 创建内置请求拦截器\n      this.interceptorIds.push(\n         this.http.interceptors.request.use(\n            (config) => {\n               // 设置请求可取消\n               config.signal = controller.signal;\n\n               return config;\n            },\n            (err) => {\n               return {\n                  ...err,\n                  message: this.exception.getExceptionMsg(-9999)\n               };\n            }\n         )\n      );\n      // 创建内置响应拦截器\n      this.interceptorIds.push(\n         this.http.interceptors.response.use(\n            (response) => {\n               if (\n                  successfulCodes.includes(response.data.code) ||\n                  response.headers['content-type'] === 'application/octet-stream' ||\n                  response.headers['content-type'] === 'image/Jpeg'\n               ) {\n                  return Promise.resolve(response);\n               } else {\n                  const errorData = {\n                     ...response,\n                     errorUrl: response.request.responseURL,\n                     message: this.exception.getExceptionMsg(\n                        response.data.code,\n                        response.data.errMsg || response.data.message || response.data.msg\n                     )\n                  };\n\n                  return Promise.reject(errorData);\n               }\n            },\n            (err) => {\n               let errMsg = '';\n               if (err.response) {\n                  if (err.response.status === 401) {\n                     queue401.push(err.response);\n                     // 多个接口同时请求，只提示一次登录过期\n                     if (queue401.length === 1) {\n                        errMsg = this.exception.getExceptionMsg(\n                           err.response.status,\n                           err.response.data.message || err.response.data.errMsg || '登录信息已过期'\n                        );\n\n                        if (!location.href.includes(loginPath)) {\n                           location.href = loginPath;\n                        }\n                     }\n                  } else {\n                     errMsg = this.exception.getExceptionMsg(\n                        err.response.status,\n                        err.response.data.errMsg || err.response.data.message || ''\n                     );\n                  }\n               } else {\n                  errMsg = this.exception.getExceptionMsg(504, '');\n               }\n\n               const errorData = {\n                  ...err,\n                  config: err.config,\n                  data: err.response.data,\n                  errorUrl: err.config ? err.config.url : '',\n                  isCanceled: err.message === 'canceled', // 主动取消请求\n                  message: errMsg\n               };\n\n               return Promise.reject(errorData);\n            }\n         )\n      );\n\n      return this;\n   }\n\n   interceptors = {\n      request: {\n         ...this.http.interceptors.request,\n         use: (\n            onFulfilled?: ((value: InternalAxiosRequestConfig) => InternalAxiosRequestConfig | Promise<InternalAxiosRequestConfig>) | null,\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            onRejected?: ((error: any) => any) | null,\n            options: AxiosInterceptorOptions = { synchronous: false, runWhen: null }\n         ): number => {\n            return this.http.interceptors.request.use(onFulfilled, onRejected, options);\n         }\n      },\n      response: {\n         ...this.http.interceptors.response,\n         use: (\n            onFulfilled?: ((value: AxiosResponse) => AxiosResponse | Promise<AxiosResponse>) | null,\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            onRejected?: ((error: any) => any) | null,\n            options: AxiosInterceptorOptions = { synchronous: false, runWhen: null }\n         ): number => {\n            return this.http.interceptors.response.use(onFulfilled, onRejected, options);\n         }\n      }\n   };\n\n   ajax<D = unknown, M = string, U = Response<D, M>>(\n      url: string,\n      data: Record<string, unknown> = {},\n      { type = 'GET', options = {} }: { type?: Method; options?: AxiosRequestConfig } = {}\n   ): ResponsePromise<D, M, U> {\n      this.url = url;\n      this.type = type.toLocaleUpperCase().trim();\n      this.data = this.type === 'GET' ? { params: data } : data;\n      this.options = options;\n\n      switch (this.type) {\n         case 'GET': {\n            return new Promise<U>((resolve, reject) => {\n               const config = Object.assign(this.data, this.options);\n               this.http\n                  .get<U>(this.url, config)\n                  .then((response) => {\n                     // 图片\n                     if (response instanceof Blob) {\n                        return resolve(response.data);\n                     }\n\n                     return resolve(response.data);\n                  })\n                  .catch((err) => {\n                     this.log(err);\n                     return reject(err);\n                  });\n            });\n         }\n         case 'POST': {\n            return new Promise<U>((resolve, reject) => {\n               if (!this.url.includes('login')) {\n                  const dataJson = JSON.stringify(this.data);\n                  if (postRequestList.find((pd) => pd.url === this.url && pd.data === dataJson)) {\n                     return reject({ message: '请不要提交重复的数据' });\n                  }\n                  postRequestList.push({ url: this.url, data: dataJson });\n               }\n\n               this.http\n                  .post<U>(this.url, this.data, this.options)\n                  .then((response) => {\n                     // blob类型\n                     if (response instanceof Blob) {\n                        return resolve(response.data);\n                     }\n\n                     return resolve(response.data);\n                  })\n                  .catch((err) => {\n                     postRequestList = postRequestList.filter((pd) => pd.url !== err.config.url || pd.data !== err.config.data);\n\n                     this.log(err);\n\n                     return reject(err);\n                  });\n            });\n         }\n         case 'PUT': {\n            return new Promise<U>((resolve, reject) => {\n               this.http\n                  .put<U>(this.url, this.data, this.options)\n                  .then((response) => {\n                     return resolve(response.data);\n                  })\n                  .catch((err) => {\n                     this.log(err);\n                     return reject(err);\n                  });\n            });\n         }\n         case 'DELETE': {\n            return new Promise<U>((resolve, reject) => {\n               this.http\n                  .delete<U>(this.url, this.options)\n                  .then((response) => {\n                     return resolve(response.data);\n                  })\n                  .catch((err) => {\n                     this.log(err);\n                     return reject(err);\n                  });\n            });\n         }\n      }\n   }\n\n   get<D = unknown, M = string, U = Response<D, M>>(url: string, data = {}, options: AxiosRequestConfig = {}): ResponsePromise<D, M, U> {\n      return this.ajax(url, data, { options: options });\n   }\n\n   post<D = unknown, M = string, U = Response<D, M>>(url: string, data = {}, options: AxiosRequestConfig = {}): ResponsePromise<D, M, U> {\n      return this.ajax(url, data, { type: 'POST', options: options });\n   }\n\n   put<D = unknown, M = string, U = Response<D, M>>(url: string, data = {}, options: AxiosRequestConfig = {}): ResponsePromise<D, M, U> {\n      return this.ajax(url, data, { type: 'PUT', options: options });\n   }\n\n   delete<D = unknown, M = string, U = Response<D, M>>(url: string, options: AxiosRequestConfig = {}): ResponsePromise<D, M, U> {\n      return this.ajax(url, {}, { type: 'DELETE', options: options });\n   }\n\n   abort(): void {\n      // 取消尚未完成的请求\n      controller.abort();\n\n      // 重置 controller 防止新请求无法发出\n      controller = new AbortController();\n   }\n\n   clearPostData(): void {\n      postRequestList = [];\n   }\n\n   private log(err: { message: string; errorUrl: string; config: AxiosRequestConfig; data: Record<string, string> }) {\n      if (err.message === 'canceled') {\n         return console.warn('尚未完成的 http 请求已取消: ', err.message);\n      }\n\n      console.group('%c http 请求错误：', 'color:red;');\n\n      const keys = Object.keys(err);\n      if (keys.length > 0) {\n         console.log('%c地址：', 'font-family:PingFang SC, Microsoft YaHei;', err.errorUrl);\n         console.log('%c方式：', 'font-family:PingFang SC, Microsoft YaHei;', err.config.method);\n         console.log('%c参数：', 'font-family:PingFang SC, Microsoft YaHei;', err.config.params);\n         console.log('%c结果：', 'font-family:PingFang SC, Microsoft YaHei;', err.data);\n         console.log('%c详细信息：', 'font-family:PingFang SC, Microsoft YaHei;', err);\n      } else {\n         console.log(`%c error:`, 'font-family:PingFang SC, Microsoft YaHei;', err);\n      }\n      console.groupEnd();\n   }\n}\n\nexport default new BigAxios();\n"],"names":["errorMsgs","msg","Exception","constructor","msgs","serviceApiErrorMsgs","getExceptionMsg","errorCode","errorMsg","error","callback","axios","Exceptions","queue401","controller","AbortController","postRequestList","BigAxios","http","create","interceptorIds","exception","axiosHttp","builtInInterceptorIds","config","loginPath","successfulCodes","url","data","push","interceptors","request","use","signal","err","message","response","includes","code","headers","Promise","resolve","errorData","errorUrl","responseURL","errMsg","reject","status","length","location","href","isCanceled","onFulfilled","onRejected","options","synchronous","runWhen","ajax","type","toLocaleUpperCase","trim","params","Object","assign","get","then","Blob","catch","log","dataJson","JSON","stringify","find","pd","post","filter","put","delete","abort","clearPostData","console","warn","group","keys","method","groupEnd"],"sourceRoot":""}